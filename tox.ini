[tox]
envlist =
    pylint-{nix,win},
    docs-{nix,win},
    runslow-{nix,win},
    doctest-{nix,win},
    production-{nix,win},
    clean-{nix,win}
isolated_build = true

[testenv]
platform =
    nix: (darwin|linux)
    win: win32

description = Running {envname} with {basepython}
passenv = HOME

basepython = python3.7

setenv =
    PIP_DISABLE_VERSION_CHECK = 1
    PYTHONPATH = {toxinidir}

whitelist_externals =
    poetry
    powershell
    rm
skip_install = true
commands =
    win: powershell -Command "Remove-Item -Recurse dist -ErrorAction SilentlyContinue"
    nix: rm -r dist

    poetry build

    clean-nix: bash -c "pip install --force-reinstall dist/*.whl"
    clean-win: powershell -Command "pip install --force-reinstall (Get-Item dist\*.whl)"

    clean: pymedphys --help
    clean: python -c "import pymedphys"

    docs-nix: bash -c "pip install --force-reinstall `ls dist/*.whl`[docs,library]"
    runslow-nix,doctest-nix: bash -c "pip install --force-reinstall `ls dist/*.whl`[pytest,library]"
    pylint-nix: bash -c "pip install --force-reinstall `ls dist/*.whl`[pytest,pylint,library]"

    docs-win: powershell -Command 'pip install --force-reinstall "$(Get-Item dist\*.whl)[docs,library]"'
    runslow-win,doctest-win: powershell -Command 'pip install --force-reinstall "$(Get-Item dist\*.whl)[pytest,library]"'
    pylint-win: powershell -Command 'pip install --force-reinstall "$(Get-Item dist\*.whl)[pytest,pylint,library]"'

    doctest: pytest -v --basetemp={envtmpdir} --junitxml=junit/.test.{envname}.xml [] --doctest-modules
    runslow: pytest -v --run-slow --basetemp={envtmpdir} --junitxml=junit/.test.{envname}.xml []
    docs: sphinx-build -W docs docs/_build/html
    pylint: pytest --pylint --pylint-jobs=1

    ; production: poetry install -vvv --no-dev
    ; production: pip install pymedphys[pytest,pylint,library]==`poetry run python -c "import pymedphys; print(pymedphys.__version__)"`
    ; production: pytest -v --run-slow --pylint --pylint-jobs=1 --doctest-modules --basetemp={envtmpdir} --junitxml=junit/.test.{envname}.xml []

name: Main

on: [pull_request]

jobs:
  Pre-Commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Linting
        run: |
          pip install pre-commit
          pre-commit run --all-files


  Tox:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu', 'macos', 'windows']
        python-version: [3.7]
        toxenv: ['pylint', 'docs', 'doctest', 'runslow']

    runs-on: ${{ matrix.os }}-latest

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install FreeTDS
      if: matrix.os == 'macos'
      run: |
        brew install freetds

    - name: Install Pandoc on Ubuntu
      if: matrix.toxenv == 'docs' && matrix.os == 'ubuntu'
      run: |
        sudo apt-get install -y pandoc

    - name: Install Pandoc on MacOS
      if: matrix.toxenv == 'docs' && matrix.os == 'macos'
      run: |
        brew install pandoc

    - name: Install Conda on Windows
      if: matrix.os == 'windows'
      run: |
        choco install wget
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe
        start /wait "" Miniconda3-latest-Windows-x86_64.exe /S

    - name: Install GEOS on Windows
      if: matrix.os == 'windows'
      run: |
        conda install geos

    - name: Show python information
      run: |
        python -c "import sys; print(sys.version); print(sys.executable)"

    - name: Upgrade pip, install poetry and tox
      run: |
        python -m pip install --upgrade pip poetry tox

    - name: Run Tox
      run: |
        poetry run tox -e ${{ matrix.toxenv }}


  # Testing:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.7]
  #       os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
  #       type: ['pytest', 'docs']

  #   runs-on: ${{ matrix.os }}

  #   steps:
  #   - uses: actions/checkout@v1
  #     fetch-depth: 1
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install Poetry
  #     run: |
  #       python -m pip install --upgrade pip poetry cython
  #   - name: Install dependencies
  #     run: |
  #       poetry install -vvv
  #   - name: Pytest with Runslow
  #     if: matrix.os == 'ubuntu-latest' && matrix.type == 'pytest'
  #     run: |
  #       poetry run pytest -v --runslow --doctest-modules --pylint
  #   - name: Pytest without Runslow
  #     if: matrix.os != 'ubuntu-latest' && matrix.type == 'pytest'
  #     run: |
  #       poetry run pytest -v
  #   - name: Build docs
  #     if: matrix.type == 'docs'
  #     run: |
  #       poetry run sphinx-build -W docs docs/_build/html
